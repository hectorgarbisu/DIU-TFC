
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class MainFrame extends javax.swing.JFrame {


    /**
     * Creates new form MainFrame
     */
    public MainFrame() {

        initComponents();

        setDate();
        Timer timDate = new Timer(20000, new ActionListener() { // 20 segundos
            @Override
            public void actionPerformed(ActionEvent evt) {
                setDate();
            }
        });
        timDate.start();

        CollectData();
        Timer timData = new Timer(180000, new ActionListener() { // 3 minutos
            @Override
            public void actionPerformed(ActionEvent evt) {
                CollectData();
            }
        });
        timData.start();
        
        TablaOpcionesPUT.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            if(TablaOpcionesPUT.getSelectedRowCount()==0)
            savePutOptionsToWalletButton.setEnabled(false);
            else savePutOptionsToWalletButton.setEnabled(true);
        }});
        TablaOpcionesCALL.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            if(TablaOpcionesCALL.getSelectedRowCount()==0)
            saveCallOptionsToWalletButton.setEnabled(false);
            else saveCallOptionsToWalletButton.setEnabled(true);
        }});
        TablaCartera.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent event) {
            if(TablaCartera.getSelectedRowCount()==0)
            deleteOptionsButton.setEnabled(false);
            else saveCallOptionsToWalletButton.setEnabled(true);
        }});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Escritorio = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        Institucion = new javax.swing.JLabel();
        ULPGC = new javax.swing.JLabel();
        VentanaContado = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaContado = new javax.swing.JTable();
        VentanaFuturos = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaFuturos = new javax.swing.JTable();
        VentanaOpcionesCALL = new javax.swing.JInternalFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablaOpcionesCALL = new javax.swing.JTable();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        saveCallOptionsToWalletButton = new javax.swing.JButton();
        VentanaOpcionesPUT = new javax.swing.JInternalFrame();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaOpcionesPUT = new javax.swing.JTable();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        savePutOptionsToWalletButton = new javax.swing.JButton();
        WalletWindow = new javax.swing.JInternalFrame();
        jComboBox6 = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaCartera = new javax.swing.JTable();
        savePutOptionsToWalletButton1 = new javax.swing.JButton();
        deleteOptionsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Fecha = new javax.swing.JTextField();
        UpdateDataButton = new javax.swing.JButton();
        ConectionStatusLabel = new javax.swing.JLabel();
        ConectionStatusLabel2 = new javax.swing.JLabel();
        BarraMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        OpenWalletMenuItem = new javax.swing.JMenuItem();
        CreateWalletMenuItem = new javax.swing.JMenuItem();
        SaveWalletMenuItem = new javax.swing.JMenuItem();
        ExitAppMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cartera de Opciones del IBEX35");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/euro.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Institucion.setText("<html>Universidad de Las Palmas de Gran Canaria<br>Escuela de Ingeniería Informática<br>Diseño de Interfaces de Usuario<br>Héctor Garbisu Arocha</html>");

        ULPGC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LOGO_ULPGC.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(ULPGC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Institucion, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Institucion, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ULPGC))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VentanaContado.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaContado.setIconifiable(true);
        VentanaContado.setTitle("Contado/Spot");
        VentanaContado.setToolTipText("Precio de Contado/Spot");
        VentanaContado.setVisible(true);

        TablaContado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Último", "Diferencia(%)", "Anterior", "Máximo", "Mínimo", "Fecha", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaContado);

        javax.swing.GroupLayout VentanaContadoLayout = new javax.swing.GroupLayout(VentanaContado.getContentPane());
        VentanaContado.getContentPane().setLayout(VentanaContadoLayout);
        VentanaContadoLayout.setHorizontalGroup(
            VentanaContadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );
        VentanaContadoLayout.setVerticalGroup(
            VentanaContadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        VentanaFuturos.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaFuturos.setIconifiable(true);
        VentanaFuturos.setTitle("Futuros (MINI) IBEX35");
        VentanaFuturos.setToolTipText("Futuros del (MINI)IBEX35");
        VentanaFuturos.setVisible(true);

        TablaFuturos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Vencimiento", "Vol. Compra", "P. Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Apertura", "Máximo", "Mínimo", "Anterior", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablaFuturos);

        javax.swing.GroupLayout VentanaFuturosLayout = new javax.swing.GroupLayout(VentanaFuturos.getContentPane());
        VentanaFuturos.getContentPane().setLayout(VentanaFuturosLayout);
        VentanaFuturosLayout.setHorizontalGroup(
            VentanaFuturosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
        );
        VentanaFuturosLayout.setVerticalGroup(
            VentanaFuturosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        VentanaOpcionesCALL.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaOpcionesCALL.setIconifiable(true);
        VentanaOpcionesCALL.setTitle("Opciones IBEX35 - CALL");
        VentanaOpcionesCALL.setToolTipText("Opciones CALL del IBEX35");
        VentanaOpcionesCALL.setVisible(true);

        TablaOpcionesCALL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TablaOpcionesCALL);

        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jComboBox4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox4PropertyChange(evt);
            }
        });

        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jComboBox5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox5PropertyChange(evt);
            }
        });

        jLabel5.setText("de:");

        jLabel6.setText("hasta:");

        jLabel7.setText("Filtrar por fecha de Vencimiento");

        saveCallOptionsToWalletButton.setText("Guardar Opciones");
        saveCallOptionsToWalletButton.setToolTipText("Guarda las opciones a la cartera abierta actualmente");
        saveCallOptionsToWalletButton.setEnabled(false);
        saveCallOptionsToWalletButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCallOptionsToWalletButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VentanaOpcionesCALLLayout = new javax.swing.GroupLayout(VentanaOpcionesCALL.getContentPane());
        VentanaOpcionesCALL.getContentPane().setLayout(VentanaOpcionesCALLLayout);
        VentanaOpcionesCALLLayout.setHorizontalGroup(
            VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
            .addGroup(VentanaOpcionesCALLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(VentanaOpcionesCALLLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(VentanaOpcionesCALLLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(VentanaOpcionesCALLLayout.createSequentialGroup()
                .addComponent(saveCallOptionsToWalletButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        VentanaOpcionesCALLLayout.setVerticalGroup(
            VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaOpcionesCALLLayout.createSequentialGroup()
                .addGroup(VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VentanaOpcionesCALLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveCallOptionsToWalletButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VentanaOpcionesPUT.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        VentanaOpcionesPUT.setIconifiable(true);
        VentanaOpcionesPUT.setTitle("Opciones IBEX35 - PUT");
        VentanaOpcionesPUT.setToolTipText("Opciones PUT del IBEX35");
        VentanaOpcionesPUT.setVisible(true);

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox2PropertyChange(evt);
            }
        });

        jLabel2.setText("Filtrar por fecha de Vencimiento");

        TablaOpcionesPUT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaOpcionesPUT.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TablaOpcionesPUTPropertyChange(evt);
            }
        });
        jScrollPane4.setViewportView(TablaOpcionesPUT);

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jComboBox3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox3PropertyChange(evt);
            }
        });

        jLabel3.setText("de:");

        jLabel4.setText("hasta:");

        savePutOptionsToWalletButton.setText("Guardiar Opciones");
        savePutOptionsToWalletButton.setToolTipText("Guarda las opciones a la cartera abierta actualmente");
        savePutOptionsToWalletButton.setEnabled(false);
        savePutOptionsToWalletButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePutOptionsToWalletButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VentanaOpcionesPUTLayout = new javax.swing.GroupLayout(VentanaOpcionesPUT.getContentPane());
        VentanaOpcionesPUT.getContentPane().setLayout(VentanaOpcionesPUTLayout);
        VentanaOpcionesPUTLayout.setHorizontalGroup(
            VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addGroup(VentanaOpcionesPUTLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(VentanaOpcionesPUTLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(VentanaOpcionesPUTLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(189, 189, 189))
            .addGroup(VentanaOpcionesPUTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(savePutOptionsToWalletButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        VentanaOpcionesPUTLayout.setVerticalGroup(
            VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaOpcionesPUTLayout.createSequentialGroup()
                .addGroup(VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VentanaOpcionesPUTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savePutOptionsToWalletButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        WalletWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        WalletWindow.setIconifiable(true);
        WalletWindow.setTitle("Cartera");
        WalletWindow.setToolTipText("Opciones PUT del IBEX35");
        WalletWindow.setVisible(true);

        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        jComboBox6.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox6PropertyChange(evt);
            }
        });

        jLabel8.setText("Cartera actual");

        TablaCartera.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Fecha vencimiento", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaCartera.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TablaCarteraPropertyChange(evt);
            }
        });
        jScrollPane5.setViewportView(TablaCartera);

        savePutOptionsToWalletButton1.setText("Guardiar Cartera");
        savePutOptionsToWalletButton1.setToolTipText("Guarda las opciones a la cartera abierta actualmente");
        savePutOptionsToWalletButton1.setEnabled(false);
        savePutOptionsToWalletButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePutOptionsToWalletButton1ActionPerformed(evt);
            }
        });

        deleteOptionsButton.setText("Eliminar Opciones seleccionadas");
        deleteOptionsButton.setEnabled(false);
        deleteOptionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOptionsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout WalletWindowLayout = new javax.swing.GroupLayout(WalletWindow.getContentPane());
        WalletWindow.getContentPane().setLayout(WalletWindowLayout);
        WalletWindowLayout.setHorizontalGroup(
            WalletWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
            .addGroup(WalletWindowLayout.createSequentialGroup()
                .addGroup(WalletWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(WalletWindowLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(savePutOptionsToWalletButton1))
                    .addComponent(deleteOptionsButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        WalletWindowLayout.setVerticalGroup(
            WalletWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WalletWindowLayout.createSequentialGroup()
                .addGroup(WalletWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savePutOptionsToWalletButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteOptionsButton)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout EscritorioLayout = new javax.swing.GroupLayout(Escritorio);
        Escritorio.setLayout(EscritorioLayout);
        EscritorioLayout.setHorizontalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EscritorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EscritorioLayout.createSequentialGroup()
                        .addComponent(VentanaContado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EscritorioLayout.createSequentialGroup()
                        .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VentanaFuturos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(EscritorioLayout.createSequentialGroup()
                                .addComponent(VentanaOpcionesPUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(VentanaOpcionesCALL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(WalletWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        EscritorioLayout.setVerticalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EscritorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VentanaContado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VentanaFuturos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VentanaOpcionesPUT)
                    .addComponent(VentanaOpcionesCALL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(WalletWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        Escritorio.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaContado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaFuturos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaOpcionesCALL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(VentanaOpcionesPUT, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(WalletWindow, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FechaActionPerformed(evt);
            }
        });

        UpdateDataButton.setText("Actualizar ahora");
        UpdateDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDataButtonActionPerformed(evt);
            }
        });

        ConectionStatusLabel.setText("Última actualización:");

        ConectionStatusLabel2.setText("Nunca");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(857, Short.MAX_VALUE)
                .addComponent(ConectionStatusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConectionStatusLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UpdateDataButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateDataButton)
                    .addComponent(ConectionStatusLabel)
                    .addComponent(ConectionStatusLabel2)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        OpenWalletMenuItem.setText("Abrir Cartera");
        OpenWalletMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenWalletMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(OpenWalletMenuItem);

        CreateWalletMenuItem.setText("Crear Cartera Nueva");
        CreateWalletMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateWalletMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(CreateWalletMenuItem);

        SaveWalletMenuItem.setText("Guardar Cartera");
        jMenu1.add(SaveWalletMenuItem);

        ExitAppMenuItem.setText("Salir");
        ExitAppMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitAppMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(ExitAppMenuItem);

        BarraMenu.add(jMenu1);

        jMenu2.setText("Editar");
        BarraMenu.add(jMenu2);

        setJMenuBar(BarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Escritorio)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Escritorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpenWalletMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenWalletMenuItemActionPerformed
        popOpenWalletWindow();
    }//GEN-LAST:event_OpenWalletMenuItemActionPerformed

    private void CreateWalletMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateWalletMenuItemActionPerformed
        popCreateWalletWindow();
    }//GEN-LAST:event_CreateWalletMenuItemActionPerformed

    private void ExitAppMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitAppMenuItemActionPerformed
        popConfirmExitDialog();
    }//GEN-LAST:event_ExitAppMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        popConfirmExitDialog();
    }//GEN-LAST:event_formWindowClosing

    private void UpdateDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDataButtonActionPerformed
        CollectData();
    }//GEN-LAST:event_UpdateDataButtonActionPerformed

    private void FechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FechaActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        currMinDatePUT = (String) jComboBox2.getSelectedItem();
        filterPUTOptionsByDate();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        currMaxDatePUT = (String) jComboBox3.getSelectedItem();
        filterPUTOptionsByDate();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        currMinDateCALL = (String) jComboBox4.getSelectedItem();
        filterCALLOptionsByDate();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        currMaxDateCALL = (String) jComboBox5.getSelectedItem();
        filterCALLOptionsByDate();
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox2PropertyChange

    }//GEN-LAST:event_jComboBox2PropertyChange

    private void jComboBox3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox3PropertyChange

    }//GEN-LAST:event_jComboBox3PropertyChange

    private void jComboBox4PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox4PropertyChange

    }//GEN-LAST:event_jComboBox4PropertyChange

    private void jComboBox5PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox5PropertyChange

    }//GEN-LAST:event_jComboBox5PropertyChange

    private void savePutOptionsToWalletButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePutOptionsToWalletButtonActionPerformed
        int[] rows = TablaOpcionesPUT.getSelectedRows();
        if(currentlyOpenWallet==-1) popOpenOrCreateWalletDialog();
        notSavedChanges = true;
//        for (int row : rows) {
//            currentlyOpenWallet.addOption(callOptionsToShow.Opciones.get(row));
//        }
    }//GEN-LAST:event_savePutOptionsToWalletButtonActionPerformed

    private void saveCallOptionsToWalletButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCallOptionsToWalletButtonActionPerformed
        int[] rows = TablaOpcionesCALL.getSelectedRows();
        if(currentlyOpenWallet==-1) popOpenOrCreateWalletDialog();
//        for (int row : rows) {
//            currentlyOpenWallet.addOption(putOptionsToShow.Opciones.get(row));
//        }
    }//GEN-LAST:event_saveCallOptionsToWalletButtonActionPerformed

    private void TablaOpcionesPUTPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TablaOpcionesPUTPropertyChange

    }//GEN-LAST:event_TablaOpcionesPUTPropertyChange

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox6PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox6PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6PropertyChange

    private void TablaCarteraPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TablaCarteraPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaCarteraPropertyChange

    private void savePutOptionsToWalletButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePutOptionsToWalletButton1ActionPerformed
        notSavedChanges = false;
    }//GEN-LAST:event_savePutOptionsToWalletButton1ActionPerformed

    private void deleteOptionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOptionsButtonActionPerformed
        notSavedChanges = true;
    }//GEN-LAST:event_deleteOptionsButtonActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        popOpenWalletWindow();
    }//GEN-LAST:event_jMenu1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar BarraMenu;
    private javax.swing.JLabel ConectionStatusLabel;
    private javax.swing.JLabel ConectionStatusLabel2;
    private javax.swing.JMenuItem CreateWalletMenuItem;
    private javax.swing.JDesktopPane Escritorio;
    private javax.swing.JMenuItem ExitAppMenuItem;
    private javax.swing.JTextField Fecha;
    private javax.swing.JLabel Institucion;
    private javax.swing.JMenuItem OpenWalletMenuItem;
    private javax.swing.JMenuItem SaveWalletMenuItem;
    private javax.swing.JTable TablaCartera;
    private javax.swing.JTable TablaContado;
    private javax.swing.JTable TablaFuturos;
    private javax.swing.JTable TablaOpcionesCALL;
    private javax.swing.JTable TablaOpcionesPUT;
    private javax.swing.JLabel ULPGC;
    private javax.swing.JButton UpdateDataButton;
    private javax.swing.JInternalFrame VentanaContado;
    private javax.swing.JInternalFrame VentanaFuturos;
    private javax.swing.JInternalFrame VentanaOpcionesCALL;
    private javax.swing.JInternalFrame VentanaOpcionesPUT;
    private javax.swing.JInternalFrame WalletWindow;
    private javax.swing.JButton deleteOptionsButton;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton saveCallOptionsToWalletButton;
    private javax.swing.JButton savePutOptionsToWalletButton;
    private javax.swing.JButton savePutOptionsToWalletButton1;
    // End of variables declaration//GEN-END:variables

    private MEFF_Contado contado = new MEFF_Contado();
    private MEFF_Futuros futuros = new MEFF_Futuros();
    private MEFF_Opciones allAvailableOptions = new MEFF_Opciones();

    private void setDate() {
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy  HH:mm ");
        String formatedDate = sdf.format(date);
        formatedDate = formatedDate.concat(" (local)");
        Fecha.setText(formatedDate);
    }

    private Float toFloat(String texto) {
//        if(texto==null) return (float) 0;
        texto = texto.replace(".", "");
        texto = texto.replace(",", ".");
        return Float.valueOf(texto);
    }

    private void CollectData() {
        try {
            ConectionStatusLabel2.setText("actualizando contado");
            //Notificaciones.setText("Recolectando datos ....");   
            // actualiza la tabla de contado
            updateContado();
            ConectionStatusLabel2.setText("actualizando futuros");
            updateFutures();
            ConectionStatusLabel2.setText("actualizando opciones");
            updateOptions();
            ConectionStatusLabel2.setText(Fecha.getText());
            //Notificaciones.setText("Datos disponibles");
        } catch (NullPointerException e) {
            ConectionStatusLabel2.setText("No se pudo completar la actualizacion");
        }
    }

    private void updateContado() {
        contado.getSpot();
        TableModel model = TablaContado.getModel();
        TablaContado.setValueAt(contado.Spot, 0, 0);
        TablaContado.setValueAt(contado.Diferencia, 0, 1);
        TablaContado.setValueAt(contado.Anterior, 0, 2);
        TablaContado.setValueAt(contado.Maximo, 0, 3);
        TablaContado.setValueAt(contado.Minimo, 0, 4);
        TablaContado.setValueAt(contado.Fecha, 0, 5);
        TablaContado.setValueAt(contado.Hora, 0, 6);
        Float diferencia = toFloat(contado.Diferencia);
        if (diferencia > 0) {
            model.setValueAt("<html><font color='green'>" + diferencia + "</font></html>", 0, 1);
        } else if (diferencia < 0) {
            model.setValueAt("<html><font color='red'>" + diferencia + "</font></html>", 0, 1);
        } else {
            model.setValueAt("<html><font color='black'>" + diferencia + "</font></html>", 0, 1);
        }
    }

    private void updateFutures() {
        futuros.getFutures();
        int nfuturos = futuros.Futuros.size();
        DefaultTableModel tablemodel = (DefaultTableModel) TablaFuturos.getModel();
        tablemodel.setRowCount(nfuturos);
        for (int i = 0; i < nfuturos; i++) {
            Futuro f = futuros.Futuros.get(i);
            TablaFuturos.setValueAt(f.Vencimiento, i, 0);
            TablaFuturos.setValueAt(f.Compra_Vol, i, 1);
            TablaFuturos.setValueAt(f.Compra_Precio, i, 2);
            TablaFuturos.setValueAt(f.Venta_Precio, i, 3);
            TablaFuturos.setValueAt(f.Venta_Vol, i, 4);
            TablaFuturos.setValueAt(f.Ultimo, i, 5);
            TablaFuturos.setValueAt(f.Volumen, i, 6);
            TablaFuturos.setValueAt(f.Apertura, i, 7);
            TablaFuturos.setValueAt(f.Maximo, i, 8);
            TablaFuturos.setValueAt(f.Minimo, i, 9);
            TablaFuturos.setValueAt(f.Anterior, i, 10);
            TablaFuturos.setValueAt(f.Hora, i, 11);
        }
    }

    private void updateOptions() {
        allAvailableOptions.getOptions();
        callOptionsToShow = allAvailableOptions.clone();
        putOptionsToShow = allAvailableOptions.clone();
        updateOptionsTable();
        refreshOptionComboBoxes();
    }
    private void updateOptionsTable(){
        updateCallOptionsTable();
        updatePutOptionsTable();
    }
    private void updateCallOptionsTable() {
        int nCallOptions = callOptionsToShow.Opciones.size();
        DefaultTableModel tableModelCall = new DefaultTableModel(new Object[][]{
            {null, null, null, null, null, null, null, null}
        },
                new String[]{
                    "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
                });
//        DefaultTableModel tableModelCall = (DefaultTableModel) TablaOpcionesCALL.getModel();

        for (int i = 0; i < nCallOptions; i++) {
            Opcion o = callOptionsToShow.Opciones.get(i);
            addOptionToTable(tableModelCall, o, i);
            dateSet.add(o.Vencimiento);
        }
        TablaOpcionesCALL.setModel(tableModelCall);

    }
    private void updatePutOptionsTable(){
        int nPutOptions = putOptionsToShow.Opciones.size();
        DefaultTableModel tableModelPut = new DefaultTableModel(new Object[][]{
            {null, null, null, null, null, null, null, null}
        },
                new String[]{
                    "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
                });
//        DefaultTableModel tableModelPut = (DefaultTableModel) TablaOpcionesPUT.getModel();
        for (int i = 0; i < nPutOptions; i++) {
            Opcion o = putOptionsToShow.Opciones.get(i);
            addOptionToTable(tableModelPut, o, i);
            dateSet.add(o.Vencimiento);
        }

        TablaOpcionesPUT.setModel(tableModelPut);    
    }

    private void refreshOptionComboBoxes() {
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        jComboBox4.removeAllItems();
        jComboBox5.removeAllItems();
        dateSet.add("Inicio del registro");
        dateSet.add("Fin del registro");
        StringDate[] dateArray = StringDate.getSortedArray(dateSet);
        StringDate item;
        for (int i = 0; i < dateArray.length; i++) {
            item = dateArray[i];
            jComboBox2.addItem(item.toString());
            jComboBox3.addItem(item.toString());
            jComboBox4.addItem(item.toString());
            jComboBox5.addItem(item.toString());
        }
        jComboBox3.setSelectedIndex(jComboBox3.getItemCount() - 1);
        jComboBox5.setSelectedIndex(jComboBox5.getItemCount() - 1);
    }

    private void addOptionToTable(DefaultTableModel tableModel, Opcion o, int i) {
        int rcount = tableModel.getRowCount();
        Object[] newRow = {o.Ejercicio, o.Compra_Vol, o.Compra_Precio, o.Venta_Precio, o.Venta_Vol, o.Ultimo, o.Volumen, o.Hora};
        tableModel.addRow(newRow);
    }

    private void saveAllOpenWallets() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void filterCALLOptionsByDate() {
        callOptionsToShow = allAvailableOptions.clone();
        Opcion opt;
        for (int i = 0; i < callOptionsToShow.Opciones.size(); i++) {
            opt = callOptionsToShow.Opciones.get(i);
            if (opt.Tipo.compareTo("CALL")!=0)callOptionsToShow.removeOption(i--);
            else if (opt.vencimiento.compareTo(currMinDateCALL) < 0
                    || opt.vencimiento.compareTo(currMaxDateCALL) > 0) {
                callOptionsToShow.removeOption(i--);
            }
        }
        updateCallOptionsTable();
    }

    private void filterPUTOptionsByDate() {
        putOptionsToShow = allAvailableOptions.clone();
        Opcion opt;
        for (int i = 0; i < putOptionsToShow.Opciones.size(); i++) {
            opt = putOptionsToShow.Opciones.get(i);
            if (opt.Tipo.compareTo("PUT")!=0)putOptionsToShow.removeOption(i--);
            else if (opt.vencimiento.compareTo(currMinDatePUT) < 0
                    || opt.vencimiento.compareTo(currMaxDatePUT) > 0) {
                putOptionsToShow.removeOption(i--);
            }
        }
        updatePutOptionsTable();
    }

    private void popConfirmExitDialog() {
        if (notSavedChanges) {
            Object[] options = {"Guardar y salir", "Salir sin guardar", "Cancelar"};
            int ret = JOptionPane.showOptionDialog(null, "Hay cambios sin guardar\n"
                    + "¿Desea guardar los cambios antes de salir?", "Salir", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE,
                    null, options, options[0]);
            if (ret == 1) {
                System.exit(0);
            }
            if (ret == 0) {
                saveAllOpenWallets();
                System.exit(0);
            }

        } else {
            int ret = JOptionPane.showConfirmDialog(rootPane,
                    "¿Realmente desea salir?", "Salir", JOptionPane.YES_NO_OPTION);
            if (ret == 0) {
                System.exit(0);
            }
        }
    }
    OptionsWalletManager manager = new OptionsWalletManager();
    int currentlyOpenWallet = -1;
    private MEFF_Opciones callOptionsToShow;
    private MEFF_Opciones putOptionsToShow;
    String currMinDatePUT = "Inicio del registro";
    String currMaxDatePUT = "Fin del registro";
    String currMinDateCALL = "Inicio del registro";
    String currMaxDateCALL = "Fin del registro";
    boolean notSavedChanges = false;
    Set<String> dateSet = new HashSet<String>();
    private void popOpenOrCreateWalletDialog() {
            Object[] options = {"Crear Cartera", "Abrir Cartera", "Cancelar"};
            int ret = JOptionPane.showOptionDialog(null, "No hay una cartera abierta actualmente\n"
                    + "¿Qué desea hacer?", " ", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE,
                    null, options, options[0]);
            if (ret == 1) {
                popOpenWalletWindow();
            }
            else if (ret == 0) {
                popCreateWalletWindow();
            }
            else{}
    }

    private void popOpenWalletWindow() {
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new WalletFilter());
        if(fc.showOpenDialog(BarraMenu)==JFileChooser.APPROVE_OPTION){
            File selectedFile = fc.getSelectedFile();
            manager.createWallet(selectedFile);
        }
    }

    private void popCreateWalletWindow() {
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new WalletFilter());
        fc.showDialog(BarraMenu, "Crear");
        if(fc.showOpenDialog(BarraMenu)==JFileChooser.APPROVE_OPTION){
            File selectedFile = fc.getSelectedFile();
            if(selectedFile.exists())
            manager.createWallet(selectedFile);
        }
    }
}
